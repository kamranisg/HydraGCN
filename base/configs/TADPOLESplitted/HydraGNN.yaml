HydraGNN:
    # -----------------------------------------
    # Clone input as target_output which will be used to calculate reconstruction loss
    DynamicBlock0:
        distributor:
        ParallelCNN:
            Model0:
                model: PyPass
                order:
                layers: 1
                layer0:
                    in_channels:
                    out_channels:

        ParallelMLP:
            Model0:
                model: PyPass
                order:
                layers: 1
                layer0:
                    in_features:
                    out_features:

        ParallelRNN:
            Model1:
                model: PyPass
                order:
                layers: 1
                layer0:
                    in_features:
                    out_features:

    AggregatorBlock0:
        distributor:
        ParallelAgg:
            Agg0:
                agg: Clone
                order:
                keyname0: "input"
                keyname1: "target_output"


    # -----------------------------------------
    # Modality level feature representation
    DynamicBlock1:
        distributor:
#        ParallelCNN:
#            Model0:
#                model: PyCNN
#                order:
#                layers: 2
#                activation:
#                    name: LeakyReLU
#                    negative_slope: 0.2
#
#                layer0:
#                    in_channels: 1
#                    out_channels: 6
#                    kernel_size: 3
#
#                layer1:
#                    in_channels: 6
#                    out_channels: 12
#                    kernel_size: 3
#
#                mlp_layer:
#                    in_features: 48
#                    out_features: 16
        #
        ParallelMLP:
            Model0:
                model: PyMLP
                order:
                layers: 2
                activation:
                    name: LeakyReLU
                    negative_slope: 0.2

                layer0:
                    in_features:
                    out_features: 32
#                        - 64
#                        - 64
#                        - 3
#                        - 3


                layer1:
                    in_features: 32
#                        - 64
#                        - 64
#                        - 3
#                        - 3
                    out_features: 32
#                        - 32
#                        - 32
#                        - 3
#                        - 3

#        ParallelRNN:
#            Model0:
#                model: PyGRU
#                order:
#                layers: 1
#                layer0:
#                    input_size:
#                    hidden_size: 8
#
#                fc_layer:
#                    in_features: 8
#                    out_features: 4
#
#                activation:
#                    name: LeakyReLU
#                    negative_slope: 0.2

    AggregatorBlock1:
        distributor:
            -   - 0
                - 1
                - 2
                - 3
            -   - 0
            -   - 1
            -   - 2
            -   - 3
        ParallelAgg:
            Agg0:
                agg: Concat
                order:
                    - 0
            Agg1:
                agg: Pass
                order:
                    - 1
                    - 2
                    - 3
                    - 4

    # -----------------------------------------
    # Graph Learning
    DynamicBlock2:
        distributor:
            - 0
            - 1
            - 2
            - 3
            - 4

        ParallelMLP:
            Model0:
                model: LGNN
                order:
                    - 0
                layers: 3
                activation:
                    name: LeakyReLU
                    negative_slope: 0.2

                layer0:
                    in_features:
                    out_features: 16
                layer1:
                    in_features: 16
                    out_features: 8

                # Layer will be used for GNN
                layer2:
                    in_channels: 128
                    out_channels: 8
                    K: 3

            Model1:
                model: PyPass
                order:
                    - 1
                    - 2
                    - 3
                    - 4
                layers: 1
                layer0:
                    in_features:
                    out_features:

    AggregatorBlock2:
        distributor:
            # For reconstruction
            -   - 0
                - 1
            -   - 0
                - 2
            -   - 0
                - 3
            -   - 0
                - 4

            # For classification
            -   - 0
                - 1
                - 2
                - 3
                - 4

        ParallelAgg:
            Agg0:
                agg: Concat
                order:
                    - 0
                    - 1
                    - 2
                    - 3
            Agg1:
                agg: Concat
                order:
                    - 4

    # -----------------------------------------
    # Classification and reconstruction blocks
    DynamicBlock3:
        distributor:
            - 4  # used for classification
            - 0  # reconstruction
            - 1  # reconstruction
            - 2  # reconstruction
            - 3  # reconstruction


        ParallelMLP:

            # Classification
            Model0:
                model: PyMLP
                order:
                    - 0
                layers: 1
                activation:
                    name: LeakyReLU
                    negative_slope: 0.2
                layer0:
                    in_features:
                    out_features:

            Model1:
                model: PyMLP
                order:
                    - 1
                layers: 2
                activation:
                    name: Identity
                layer0:
                    in_features:
                    out_features: 32

                layer1:
                    in_features: 32
                    out_features: 328

            Model2:
                model: PyMLP
                order:
                    - 2
                layers: 2
                activation:
                    name: Identity
                layer0:
                    in_features:
                    out_features: 32

                layer1:
                    in_features: 32
                    out_features: 106

            Model3:
                model: PyMLP
                order:
                    - 3
                layers: 2
                activation:
                    name: Identity
                layer0:
                    in_features:
                    out_features: 32

                layer1:
                    in_features: 32
                    out_features: 1

            Model4:
                model: PyMLP
                order:
                    - 4
                layers: 2
                activation:
                    name: Identity
                layer0:
                    in_features:
                    out_features: 32

                layer1:
                    in_features: 32
                    out_features: 5


    AggregatorBlock3:
        distributor:
            -   - 0
            -   - 1
            -   - 2
            -   - 3
            -   - 4
        ParallelAgg:
            Agg0:
                agg: Pass
                order:
                    - 0
                    - 1
                    - 2
                    - 3
                    - 4